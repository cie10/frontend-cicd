name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository # checkout을 사용하여 현재 레포지토리의 코드를 클론
      uses: actions/checkout@v2  # 레포지토리 코드를 체크아웃
      
    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

    # Docker 이미지를 빌드하고 푸시
    - name: Build and push Docker image
      run: |
        docker buildx create --use # Buildx를 활성화
        docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_IMAGE_NAME }} --push .

    - name: SSH into EC2 and deploy
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          # backend_network가 없으면 생성
          if ! docker network inspect backend_network >/dev/null 2>&1; then
            docker network create backend_network
          fi
          
          # 최신 이미지를 pull하고 기존 컨테이너를 중단 및 삭제 후 새로 시작
          docker pull ${{ secrets.DOCKER_IMAGE_NAME }}
          docker stop my-app || true
          docker rm my-app || true
          
          # 프론트엔드 컨테이너를 backend_network에 연결하여 실행
          docker run -d --name my-app --network backend_network -p 80:80 ${{ secrets.DOCKER_IMAGE_NAME }}
